#version 330 core

// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec2 vertexUV;
layout(location = 2) in vec3 vertexNormals;

// Output data to fragment shader
out vec2 uv_vertex;
out vec3 surfaceNormals;
out vec3 fragmentPosition;

// Values that stay constant for the whole mesh.
uniform mat4 MVP;

void main(){

    gl_Position = MVP * vec4(vertexPosition_modelspace, 1);
	uv_vertex = vertexUV;
	surfaceNormals = vertexNormals;
	fragmentPosition = vertexPosition_modelspace;

}
